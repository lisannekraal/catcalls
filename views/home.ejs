<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@CatcallsofAmsterdam</title>
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no" />
    <script src='https://api.mapbox.com/mapbox-gl-js/v1.11.0/mapbox-gl.js'></script>
    <link href='https://api.mapbox.com/mapbox-gl-js/v1.11.0/mapbox-gl.css' rel='stylesheet' />
    <link rel="stylesheet" href="style.css">
</head>
<body>

    <div class='sidebar'>
        <div class='heading'>
          <h1>Alle Catcalls</h1>
        </div>
        <div id='listings' class='listings'>
          <!--this is where script inserts the catcall descriptions-->
        </div>
    </div>

    <div id='map' class='map pad2'>Map</div>

    <script>
    // This will let you use the .remove() function later on
    if (!('remove' in Element.prototype)) {
        Element.prototype.remove = function() {
            if (this.parentNode) {
            this.parentNode.removeChild(this);
            }
        };
    }

    mapboxgl.accessToken = 'pk.eyJ1IjoibGlzYW4ta3JhYWwiLCJhIjoiY2s1Mm9uaXN4MDBiczNubHM2ZXc3MWIwaSJ9.6zWdzChRs2uXgoUUWJZZPw';
        var map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/streets-v11',
        center: [4.908019, 52.366249],
        zoom: 12
    });

    var geojson = {
        type: 'FeatureCollection',
        features: [{
            type: 'Feature',
            geometry: {
            type: 'Point',
            coordinates: [4.891362, 52.366768]
            },
            properties: {
            description: '"Wat doe je hier ga naar huis?!"',
            date: 'geen datum',
            context: ''
            }
          },
                  {
            type: 'Feature',
            geometry: {
            type: 'Point',
            coordinates: [4.892320, 52.368408]
            },
            properties: {
            description: '"You have the nicest ass of Amsterdam!"',
            date: 'geen datum',
            context: 'Ik stond voor de 3 greafjes, toen een groepje toeristen langs liepen. Één van hen keek naar mij en maakten van die lip lik bewegingen, vervolgens zei hij “You have the nicest ass of Amsterdam”. Toen begonnen ze allemaal te lachen.'
            }
          },
                  {
            type: 'Feature',
            geometry: {
            type: 'Point',
            coordinates: [4.899601, 52.378574]
            },
            properties: {
            description: '"Oh but you ain\'t got no ass"',
            date: 'geen datum',
            context: ''
            }
          },
                  {
            type: 'Feature',
            geometry: {
            type: 'Point',
            coordinates: [4.898826, 52.378849]
            },
            properties: {
            description: '"Hey, hey, heey! Dan niet hoer!"',
            date: 'geen datum',
            context: ''
            }
          },
                  {
            type: 'Feature',
            geometry: {
            type: 'Point',
            coordinates: [4.900201, 52.376536]
            },
            properties: {
            description: '"Heey lekkerding! Ik vind dat jij mij jouw nummer moet geven!"',
            date: 'geen datum',
            context: ''
            }
          },
                  {
            type: 'Feature',
            geometry: {
            type: 'Point',
            coordinates: [4.893726, 52.373187]
            },
            properties: {
            description: '"Kom maar meisje.."',
            date: 'geen datum',
            context: ''
            }
          },
                  {
            type: 'Feature',
            geometry: {
            type: 'Point',
            coordinates: [5.003396, 52.351223]
            },
            properties: {
            description: '"Mag ik je in jouw bil knijpen?"',
            date: 'geen datum',
            context: ''
            }
          },
                  {
            type: 'Feature',
            geometry: {
            type: 'Point',
            coordinates: [4.927139, 52.362590]
            },
            properties: {
            description: '"Lekker lachen hé"',
            date: 'geen datum',
            context: 'Ik liep richting waar mijn vriendin woont en dat is bij Eerste van Swindenstraat. Ondertussen was ik aan het appen met haar. We waren grapjes aan het maken en ik glimlachte naar mijn scherm. Er liepen twee mannen van 40/50 langs waarvan 1 die naast mij stond zei “Lekker lachen he?” Ik maakte een tjoerie en liep verder.'
            }
          },
                  {
            type: 'Feature',
            geometry: {
            type: 'Point',
            coordinates: [4.900309, 52.372467]
            },
            properties: {
            description: '"Ik wil seks met jou"',
            date: 'geen datum',
            context: ''
            }
          }
        ]
    };

    geojson.features.forEach(function(catcall, i){
        catcall.properties.id = i;
    });

    function buildCatcallList(geojson) {
        geojson.features.forEach(function(catcall, i){
            var prop = catcall.properties;

            // Add a new listing section to the sidebar
            var listings = document.getElementById('listings');
            var listing = listings.appendChild(document.createElement('div'));
            listing.id = "listing-" + prop.id;
            listing.className = 'item';

            // Add the link to the individual listing created above
            const link = listing.appendChild(document.createElement('a'));
            link.href = '#';
            link.className = 'title';
            link.id = prop.id; //used to be link.id = "link-" + prop.id;
            link.innerHTML = prop.description;

            // Add details to the individual listing
            var details = listing.appendChild(document.createElement('div'));
            details.innerHTML = prop.date;
            // if (prop.context) {
            // details.innerHTML += ' · ' + prop.context;
            // }

            link.addEventListener('click', function(e){

              var clickedListing = geojson.features[this.id];
              flyToLocation(clickedListing);
              createPopUp(clickedListing);

              var activeItem = document.getElementsByClassName('active');
              if (activeItem[0]) {
                activeItem[0].classList.remove('active');
              }
              this.parentNode.classList.add('active');
            });
        });
    }

    function addMarkers() {
      geojson.features.forEach(function(marker) {
        var el = document.createElement('div');
        el.id = "marker-" + marker.properties.id;
        el.className = 'marker';
        
        new mapboxgl.Marker(el, { offset: [0, -23] })
          .setLngLat(marker.geometry.coordinates)
          .addTo(map);
        
          el.addEventListener('click', function(e){
            flyToLocation(marker);
            createPopUp(marker);

            var activeItem = document.getElementsByClassName('active');
            e.stopPropagation();
            if (activeItem[0]) {
              activeItem[0].classList.remove('active');
            }
            var listing = document.getElementById('listing-' + marker.properties.id);
            listing.classList.add('active');
          });
      });
    }

    map.on('load', function (e) {
        map.addSource('locations', {
          type: 'geojson',
          data: geojson
        });
        addMarkers();
        buildCatcallList(geojson);
    });

    function flyToLocation(currentFeature) {
        map.flyTo({
            center: currentFeature.geometry.coordinates,
            zoom: 15
        });
    }

    function createPopUp(currentFeature) {
        var popUps = document.getElementsByClassName('mapboxgl-popup');
        // Check if there is already a popup on the map and if so, remove it
        if (popUps[0]) popUps[0].remove();

        var popup = new mapboxgl.Popup({ closeOnClick: false })
            .setLngLat(currentFeature.geometry.coordinates)
            .setHTML('<h3>Catcall</h3>' +
            '<h4>' + currentFeature.properties.description + '</h4>' +
            '<p>' + currentFeature.properties.date + ' · ' + currentFeature.properties.context + '</p>')
            .addTo(map);
    }

    </script>
 
</body>
</html>




